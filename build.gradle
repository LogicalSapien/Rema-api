plugins {
	id 'org.springframework.boot' version '2.5.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id "org.sonarqube" version "3.3"
	id 'java'
	id "jacoco"
	id "com.github.spotbugs" version "4.7.2"
}

// For applying checkstyle configuration
apply plugin: 'checkstyle'
apply plugin: 'pmd'

group = 'com.logicalsapien.rema'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

ext {
	checkstyleVersion = '8.44'
	pmdVersion = '6.36.0'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

test {
	useJUnitPlatform()
	// for verbose logging in CI/Cd pipeline
	testLogging {
		events "passed", "skipped", "failed"
		exceptionFormat "full"
	}
}


jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
		csv.enabled false
	}
}

//For configuring checkstyle
checkstyle {
	toolVersion checkstyleVersion
	configFile file("config/checkstyle/checkstyle.xml")
}

//For configuring pmd
pmd {
	toolVersion = pmdVersion
//	ruleSets = ["category/java/errorprone.xml", "category/java/bestpractices.xml"]
	ignoreFailures = true
	pmdTest.enabled=true
}

//For configuring sonarqube
sonarqube {
	properties {
		property "sonar.projectKey", "LogicalSapien_Rema-api"
		property "sonar.coverage.jacoco.xmlRe	portPaths", "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
		property "sonar.exclusions", "src/java/test/**"
		property "sonar.java.checkstyle.reportPaths", "${buildDir}/reports/checkstyle/main.xml"
		property "sonar.java.checkstyle.reportPaths", "${buildDir}/reports/checkstyle/test.xml"
//		property "sonar.java.spotbugs.reportPaths", "${buildDir}/reports/spotbugs/main.xml"
//		property "sonar.java.spotbugs.reportPaths", "${buildDir}/reports/spotbugs/test.xml"
//		property "sonar.java.pmd.reportPaths", "${buildDir}/reports/pmd/main.xml"
//		property "sonar.java.pmd.reportPaths", "${buildDir}/reports/pmd/test.xml"
	}
}
